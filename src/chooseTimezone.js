const { StepScene, Keyboard } = require('aitu')
const moment = require('moment-timezone')

const getTimezoneByCityName = require('./getTimezoneByCityName')

module.exports = new StepScene('chooseTimezone', [
  async ctx => {
    if (ctx.metadata && ctx.metadata === 'exit') {
      ctx.send('üëå –¢–µ–ø–µ—Ä—å –≤—ã –≥–æ—Ç–æ–≤—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º!')
      return ctx.scene.leave()
    }

    if (ctx.scene.step.firstTime) {
      const { timezone } = ctx.state.user
      const message = `–í–∞—à –Ω—ã–Ω–µ—à–Ω–∏–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å: ${timezone} (—Å–µ–π—á–∞—Å ${moment().tz(timezone).format('HH:mm')})\n` +
        '–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –µ–≥–æ –∏–∑–º–µ–Ω–∏—Ç—å, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –∏–º—è —Å–≤–æ–µ–≥–æ –≥–æ—Ä–æ–¥–∞'
      return ctx.send(message, {
        inlineCommandRows: Keyboard.builder().inlineCommand({ caption: '–ì–æ—Ç–æ–≤–æ', metadata: 'exit' })
      })
    }

    const timeZone = await getTimezoneByCityName(ctx.text)
    ctx.state.user.timezone = timeZone
    await ctx.state.user.save()
    ctx.send(`üëå –ù–æ–≤—ã–π –ø–æ—è—Å: ${timeZone} (—Å–µ–π—á–∞—Å ${moment().tz(timeZone).format('HH:mm')})`)

    return ctx.scene.leave()
  }
])
